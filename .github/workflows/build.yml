name: Build digipad-api

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.11]

    runs-on: ${{ matrix.os }}
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            digipad

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -e .[build]

      - name: Build executable
        run: |
          python pyinst.py

      - name: Build package
        run: |
          python -m build

      - name: Create release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: dist/**
          name: Release ${{ github.ref }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.os }}
          path: dist/**

  build-docs:
    name: Build the documentation
    needs: build

    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.11]

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            docs
            mkdocs.yml
            pyproject.toml

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          pattern: build-*
          merge-multiple: true

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -e .[docs]

      - name: Copy the built files into the documentation
        run: python copy_build_into_docs.py

      - name: Build the documentation
        run: mkdocs build

      - name: Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site/

  deploy:
    name: Deploy to GitHub Pages
    needs: build-docs

    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
